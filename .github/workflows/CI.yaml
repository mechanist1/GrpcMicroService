name: CI and Dockerization

on:
  push:
    branches:
      - master

jobs:
  test_build_dockerize:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: grpcmsg
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: clear project
        run: mvn clean

      - name: compile the project
        run: mvn compile

      - name: run test case
        run: mvn test

      - name: Build with Maven
        run: mvn clean install package

      # Get version from a VERSION file or increment based on git
      - name: Get Version
        id: version
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            VERSION="1.0.0"
            echo $VERSION > VERSION
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi
          # Append Git short SHA for uniqueness
          GIT_SHA=$(git rev-parse --short HEAD)
          NEW_VERSION="$VERSION-$GIT_SHA"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: azizdhoukar  # Use secrets for production
          password: dckr_pat_f4szj9gJ7kku6kw0Fl3zoReo_QA  # Use secrets for production

      - name: Build Docker image
        run: docker build -t azizdhoukar/ps5:Order-${{ env.NEW_VERSION }} .

      - name: Push Docker image to Docker Hub
        run: docker push azizdhoukar/ps5:Order-${{ env.NEW_VERSION }}

      - name: Update VERSION file
        run: |
          echo "${{ env.NEW_VERSION }}" > VERSION
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add VERSION
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push
